0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4ï¿½ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (40) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (808) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (808) wifi:enable tsf[0m
[0;32mI (808) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (908) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (918) wifi:state: init -> auth (0xb0)[0m
[0;32mI (918) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (928) wifi:state: assoc -> run (0x10)[0m
[0;32mI (938) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (978) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (978) wifi:security: WPA2-PSK, phy: bgn, rssi: -76[0m
[0;32mI (978) wifi:pm start, type: 1[0m

[0;32mI (978) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (1018) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (1018) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1018) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3148) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3148) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3148) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3158) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3158) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3488) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3488) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3498) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3498) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3508) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3508) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3518) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3518) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3528) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3528) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3538) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3538) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3548) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3558) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3568) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3578) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3578) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3938) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3948) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3948) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3968) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3968) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3978) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3978) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4028) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4028) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4068) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9720 0x400897c1:0x3ffb9740 0x4008a64a:0x3ffb9760 0x4008b98b:0x3ffb97e0 0x4008a754:0x3ffb9800 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (778) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (778) wifi:enable tsf[0m
[0;32mI (778) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (788) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (798) wifi:state: init -> auth (0xb0)[0m
[0;32mI (808) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (818) wifi:state: assoc -> run (0x10)[0m
[0;32mI (838) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (888) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (888) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (888) wifi:pm start, type: 1[0m

[0;32mI (888) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (898) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (908) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (928) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3038) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3038) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3038) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3048) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3048) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3268) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3268) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3278) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3278) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3288) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3288) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3308) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3308) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3308) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3308) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3318) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3328) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3338) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3338) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3348) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3348) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3358) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3368) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3648) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3658) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3748) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9c30 0x400897c1:0x3ffb9c50 0x4008a64a:0x3ffb9c70 0x4008b98b:0x3ffb9cf0 0x4008a754:0x3ffb9d10 0x4008a706:0x3f40ed94 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (808) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (868) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (868) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (878) wifi:pm start, type: 1[0m

[0;32mI (878) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (898) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (898) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1398) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (4978) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (4978) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (4978) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (4988) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (4988) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (5208) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (5218) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5218) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5218) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (5218) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5228) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5228) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (5238) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (5248) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (5248) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (5258) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (5258) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (5268) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (5268) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5268) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (5288) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (5288) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (5288) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (5298) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (5298) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5588) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5588) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5588) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5638) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5648) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5658) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5688) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5748) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9f10 0x400897c1:0x3ffb9f30 0x4008a64a:0x3ffb9f50 0x4008b98b:0x3ffb9fd0 0x4008a754:0x3ffb9ff0 0x4008a706:0x3ffba010 0x400f89e9:0x00000000 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (828) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (838) wifi:state: init -> auth (0xb0)[0m
[0;32mI (848) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (848) wifi:state: assoc -> run (0x10)[0m
[0;32mI (868) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (908) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (908) wifi:security: WPA2-PSK, phy: bgn, rssi: -76[0m
[0;32mI (908) wifi:pm start, type: 1[0m

[0;32mI (908) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (928) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (928) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1458) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3688) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3688) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3688) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3698) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3698) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3918) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3918) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3938) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3948) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3958) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3968) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3968) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3978) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3978) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3998) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (4008) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (4008) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4338) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (4338) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4348) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4348) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4358) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4358) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4368) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4388) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4388) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4398) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4398) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4408) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4408) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4418) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4418) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4428) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4428) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4438) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4438) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4448) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4488) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (858) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (888) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (918) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (918) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (2948) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (2948) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (2948) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (2958) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (2958) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3288) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3288) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3298) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3308) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3328) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3328) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3338) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3338) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3348) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3358) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3368) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3378) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3378) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3378) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9d60 0x400897c1:0x3ffb9d80 0x4008a64a:0x3ffb9da0 0x4008b98b:0x3ffb9e20 0x4008a754:0x3ffb9e40 0x4008a706:0x00000000 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (788) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (908) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (908) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (2948) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (2948) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (2948) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (2958) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (2958) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3388) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3388) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3388) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3388) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3398) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3398) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3408) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3408) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3428) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3428) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3428) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3428) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3438) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3438) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3448) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3458) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3458) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3468) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3468) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3478) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3478) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3658) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3658) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3668) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3678) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3688) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3688) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3748) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3788) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9960 0x400897c1:0x3ffb9980 0x4008a64a:0x3ffb99a0 0x4008b98b:0x3ffb9a20 0x4008a754:0x3ffb9a40 0x4008a706:0x00060623 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (808) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (838) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (838) wifi:security: WPA2-PSK, phy: bgn, rssi: -74[0m
[0;32mI (838) wifi:pm start, type: 1[0m

[0;32mI (838) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (878) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1368) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3428) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3428) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3428) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3438) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3438) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3638) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3638) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3668) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3678) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3688) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3718) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3718) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3728) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4058) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4058) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4058) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4068) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4068) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (4078) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4078) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4088) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4098) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4098) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4108) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4108) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4118) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4118) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4128) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4128) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4138) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4138) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4148) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4148) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4158) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4168) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4168) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4178) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4178) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4188) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4228) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9aa0 0x400897c1:0x3ffb9ac0 0x4008a64a:0x3ffb9ae0 0x4008b98b:0x3ffb9b60 0x4008a754:0x3ffb9b80 0x4008a706:0x3ffafb8c |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -73[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (918) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (918) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1378) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (5098) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (5098) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (5098) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (5108) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (5108) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (5328) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5328) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (5338) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5338) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5348) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (5348) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (5368) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (5368) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (5368) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (5368) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (5378) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (5388) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5388) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (5398) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (5398) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (5408) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (5408) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (5418) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5418) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5428) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5588) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5588) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5638) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5648) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (808) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (808) wifi:enable tsf[0m
[0;32mI (808) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (818) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (828) wifi:state: init -> auth (0xb0)[0m
[0;32mI (828) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (838) wifi:state: assoc -> run (0x10)[0m
[0;32mI (868) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (918) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (918) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (918) wifi:pm start, type: 1[0m

[0;32mI (918) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (948) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (958) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (958) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (2988) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (2988) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (2988) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (2998) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (2998) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3218) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3218) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3218) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3228) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3228) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3238) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3238) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3248) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3258) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3258) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3268) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3268) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3278) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3278) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3298) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3308) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3308) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3638) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3648) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3658) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3668) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffba060 0x400897c1:0x3ffba080 0x4008a64a:0x3ffba0a0 0x4008b98b:0x3ffba120 0x4008a754:0x3ffba140 0x4008a706:0xdcfbbd78 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (788) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (788) wifi:enable tsf[0m
[0;32mI (788) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (798) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (808) wifi:state: init -> auth (0xb0)[0m
[0;32mI (808) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (818) wifi:state: assoc -> run (0x10)[0m
[0;32mI (838) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (868) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (868) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (878) wifi:pm start, type: 1[0m

[0;32mI (878) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (938) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (938) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1398) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3478) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3478) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3478) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3488) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3488) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3918) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3918) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3938) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3938) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3958) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3968) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3968) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3978) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3988) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3998) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (4008) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4338) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (4338) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4348) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4358) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4358) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4368) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4368) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4388) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4388) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4398) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4398) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4408) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4408) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4418) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4428) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4428) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4428) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4438) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4448) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4448) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4488) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -73[0m
[0;32mI (848) wifi:pm start, type: 1[0m

[0;32mI (848) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (918) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (918) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (3058) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3058) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3058) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3068) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3068) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3288) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3288) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3308) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3308) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3328) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3328) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3338) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3338) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3348) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3368) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3368) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3378) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3378) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3388) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3668) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (818) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (818) wifi:enable tsf[0m
[0;32mI (818) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (828) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (838) wifi:state: init -> auth (0xb0)[0m
[0;32mI (838) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (848) wifi:state: assoc -> run (0x10)[0m
[0;32mI (868) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (898) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (898) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (908) wifi:pm start, type: 1[0m

[0;32mI (908) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (918) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (918) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (948) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3148) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3148) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3148) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3158) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3158) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3378) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3378) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3378) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3378) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3388) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3388) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3398) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3398) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3418) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3418) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3418) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3418) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3428) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3438) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3438) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3448) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3448) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3458) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3458) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3468) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3468) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3478) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3658) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3658) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3668) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3678) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3688) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3688) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9ad0 0x400897c1:0x3ffb9af0 0x4008a64a:0x3ffb9b10 0x4008b98b:0x3ffb9b90 0x4008a754:0x3ffb9bb0 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -75[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (918) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (918) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (4488) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (4488) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (4488) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (4498) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (4498) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (4938) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (4938) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4938) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4938) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (4938) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4948) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4948) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (4958) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (4968) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (4968) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (4978) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (4978) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (4988) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (4988) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4998) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (4998) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (5008) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (5008) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (5018) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (5018) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5028) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5028) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5338) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5338) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5348) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5348) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5358) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5358) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5368) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5378) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5378) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5388) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5388) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5398) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5398) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5408) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5408) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5418) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5418) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5428) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5428) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5438) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5448) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5448) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5458) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5488) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -71[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (898) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (908) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (908) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (3048) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3048) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3048) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3058) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3058) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3288) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3288) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3308) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3308) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3328) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3328) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3338) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3338) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3348) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3358) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3368) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3378) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3378) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3388) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3648) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3658) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3658) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3678) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3678) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3688) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3778) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffba050 0x400897c1:0x3ffba070 0x4008a64a:0x3ffba090 0x4008b98b:0x3ffba110 0x4008a754:0x3ffba130 0x4008a706:0x7752eea4 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (788) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (788) wifi:enable tsf[0m
[0;32mI (788) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (798) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (808) wifi:state: init -> auth (0xb0)[0m
[0;32mI (808) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (818) wifi:state: assoc -> run (0x10)[0m
[0;32mI (878) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (928) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (928) wifi:security: WPA2-PSK, phy: bgn, rssi: -75[0m
[0;32mI (928) wifi:pm start, type: 1[0m

[0;32mI (928) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (978) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (978) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (978) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (3118) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3118) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3118) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3128) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3128) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3558) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3558) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3568) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3568) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3578) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3598) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3608) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3628) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3638) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4018) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4028) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4028) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4038) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4038) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4048) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4048) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4058) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4058) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4068) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4068) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4078) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4088) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4088) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4088) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4098) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4098) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4108) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4148) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9a20 0x400897c1:0x3ffb9a40 0x4008a64a:0x3ffb9a60 0x4008b98b:0x3ffb9ae0 0x4008a754:0x3ffb9b00 0x4008a706:0x3ffb9ae3 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (808) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (858) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -74[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (878) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (898) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (4458) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (4458) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (4458) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (4468) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (4468) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (4888) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (4888) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4888) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4888) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (4898) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4898) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4908) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (4908) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (4928) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (4928) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (4928) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (4928) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (4938) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (4938) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4948) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (4958) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (4958) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (4968) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (4968) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (4978) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4978) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4988) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5298) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5298) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5298) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5318) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5318) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5338) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5338) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5348) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5348) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5358) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5358) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5368) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5368) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5378) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5378) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5388) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5388) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5398) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5398) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5408) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5418) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5418) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5428) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5458) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb99a0 0x400897c1:0x3ffb99c0 0x4008a64a:0x3ffb99e0 0x4008b98b:0x3ffb9a60 0x4008a754:0x3ffb9a80 0x4008a706:0x3ffb9aa0 0x4008a265:0x3ffb9d3c |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (808) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (808) wifi:enable tsf[0m
[0;32mI (808) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (908) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (908) wifi:state: init -> auth (0xb0)[0m
[0;32mI (918) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (918) wifi:state: assoc -> run (0x10)[0m
[0;32mI (948) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (978) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (988) wifi:security: WPA2-PSK, phy: bgn, rssi: -75[0m
[0;32mI (988) wifi:pm start, type: 1[0m

[0;32mI (988) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (1018) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (1108) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (1108) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (3248) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3248) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3248) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3258) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3258) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3888) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3888) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3888) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3898) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3898) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3908) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3918) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3928) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3938) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3968) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3968) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3978) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3978) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4288) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4288) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4288) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4298) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4298) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (4308) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4308) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4318) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4328) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4328) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4338) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4338) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4348) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4348) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4358) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4358) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4368) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4368) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4388) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4388) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4398) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4408) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4408) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4418) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4448) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (788) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (858) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -74[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (868) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (908) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (908) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1388) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3468) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3468) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3468) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3478) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3478) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3898) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3898) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3908) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3918) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3928) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3948) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3958) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3968) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3978) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3978) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3988) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3988) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4308) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4308) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4308) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4308) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4318) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (4318) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4338) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4338) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4348) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4358) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4358) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4368) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4368) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4378) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4388) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4388) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4398) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4398) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4408) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4408) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4418) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4418) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4428) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4468) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb99f0 0x400897c1:0x3ffb9a10 0x4008a64a:0x3ffb9a30 0x4008b98b:0x3ffb9ab0 0x4008a754:0x3ffb9ad0 0x4008a706:0x00000000 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (858) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -71[0m
[0;32mI (868) wifi:pm start, type: 1[0m

[0;32mI (868) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (918) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (918) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (918) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3058) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3058) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3058) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3068) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3068) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3498) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3498) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3498) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3498) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3508) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3508) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3518) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3518) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3528) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3538) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3538) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3538) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3548) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3548) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3568) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3568) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3578) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3578) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3588) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3938) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3948) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3948) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3968) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3968) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3978) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3978) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4028) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4028) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4068) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9c30 0x400897c1:0x3ffb9c50 0x4008a64a:0x3ffb9c70 0x4008b98b:0x3ffb9cf0 0x4008a754:0x3ffb9d10 0x4008a706:0x00000000 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (788) wifi:state: assoc -> run (0x10)[0m
[0;32mI (808) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (838) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (838) wifi:security: WPA2-PSK, phy: bgn, rssi: -74[0m
[0;32mI (848) wifi:pm start, type: 1[0m

[0;32mI (848) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (898) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (908) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (908) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (3078) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3078) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3078) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3088) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3088) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3488) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3488) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3498) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3508) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3508) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3518) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3528) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3528) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3528) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3538) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3538) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3548) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3548) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3568) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3578) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3578) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3948) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3948) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3958) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3968) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3968) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3978) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3978) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3988) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4028) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4028) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4038) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4078) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb99f0 0x400897c1:0x3ffb9a10 0x4008a64a:0x3ffb9a30 0x4008b98b:0x3ffb9ab0 0x4008a754:0x3ffb9ad0 0x4008a706:0x00000000 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (778) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (778) wifi:enable tsf[0m
[0;32mI (778) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (788) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (798) wifi:state: init -> auth (0xb0)[0m
[0;32mI (808) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (808) wifi:state: assoc -> run (0x10)[0m
[0;32mI (838) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (868) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (878) wifi:security: WPA2-PSK, phy: bgn, rssi: -75[0m
[0;32mI (878) wifi:pm start, type: 1[0m

[0;32mI (878) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (888) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (898) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (958) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (5078) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (5078) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (5078) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (5088) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (5088) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (5308) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5308) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (5318) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5328) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (5338) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (5348) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (5348) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (5348) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (5358) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (5358) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (5368) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5368) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (5378) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (5378) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (5388) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (5398) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (5398) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5408) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5408) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5588) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5638) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5648) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9850 0x400897c1:0x3ffb9870 0x4008a64a:0x3ffb9890 0x4008b98b:0x3ffb9910 0x4008a754:0x3ffb9930 0x4008a706:0x00000000 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (808) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (838) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (838) wifi:security: WPA2-PSK, phy: bgn, rssi: -74[0m
[0;32mI (848) wifi:pm start, type: 1[0m

[0;32mI (848) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (868) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (928) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (928) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (2968) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (2968) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (2968) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (2978) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (2978) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3198) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3198) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3198) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3208) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3208) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3218) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3218) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3228) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3238) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3238) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3238) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3248) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3248) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3258) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3258) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3278) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3288) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3288) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (768) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (928) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (928) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1378) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3478) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3478) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3478) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3488) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3488) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3708) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3718) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3728) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3738) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3748) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3748) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3758) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3758) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3758) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3768) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3768) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3778) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3788) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3788) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3798) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3798) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3808) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3808) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (4018) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4028) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4038) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4038) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4048) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4048) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4058) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4058) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4068) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4078) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4078) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4078) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4088) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4088) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4098) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4108) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4108) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4118) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4128) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4128) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4128) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4168) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (788) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (788) wifi:state: init -> auth (0xb0)[0m
[0;32mI (798) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (808) wifi:state: assoc -> run (0x10)[0m
[0;32mI (828) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (868) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (868) wifi:security: WPA2-PSK, phy: bgn, rssi: -73[0m
[0;32mI (868) wifi:pm start, type: 1[0m

[0;32mI (868) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (898) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (918) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (918) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (2958) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (2958) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (2958) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (2968) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (2968) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3388) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3388) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3388) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3398) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3398) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3408) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3408) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3418) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3428) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3428) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3438) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3438) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3438) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3448) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3448) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3458) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3468) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3468) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3478) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3478) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3658) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3658) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3668) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3688) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3688) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3698) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3748) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3788) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb99f0 0x400897c1:0x3ffb9a10 0x4008a64a:0x3ffb9a30 0x4008b98b:0x3ffb9ab0 0x4008a754:0x3ffb9ad0 0x4008a706:0x00000000 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (818) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (818) wifi:enable tsf[0m
[0;32mI (818) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (838) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (838) wifi:state: init -> auth (0xb0)[0m
[0;32mI (848) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (858) wifi:state: assoc -> run (0x10)[0m
[0;32mI (878) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (908) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (908) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (918) wifi:pm start, type: 1[0m

[0;32mI (918) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (988) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (988) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1438) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3638) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3638) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3638) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3648) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3648) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3878) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3878) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3878) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3878) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3888) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3888) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3888) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3898) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3918) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3918) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3928) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3928) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3938) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3948) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3958) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3968) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3968) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3968) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4278) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4278) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4278) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4288) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4288) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (4288) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4298) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4308) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4308) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4318) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4318) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4328) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4338) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4348) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4348) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4348) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4358) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4358) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4368) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4378) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4388) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4398) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4398) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 4017 (-0xfffff04f)[0m

[0;32mI (4448) mbedtls: ssl_msg.c:2315 in_left: 4022, nb_want: 5137[0m

[0;32mI (4448) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 1115 (-0xfffffba5)[0m

[0;32mI (4448) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4488) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9e30 0x400897c1:0x3ffb9e50 0x4008a64a:0x3ffb9e70 0x4008b98b:0x3ffb9ef0 0x4008a754:0x3ffb9f10 0x4008a706:0x3f40db58 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (828) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (858) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -74[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (888) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (938) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (938) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (2978) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (2978) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (2978) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (2988) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (2988) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3208) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3208) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3208) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3208) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3218) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3218) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3228) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3228) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3248) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3248) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3248) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3248) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3258) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3258) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3278) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3278) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3288) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3288) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3298) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3308) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (838) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (838) wifi:state: init -> auth (0xb0)[0m
[0;32mI (1838) wifi:state: auth -> init (0x200)[0m
[0;32mI (1848) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (4278) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (4278) wifi:state: init -> auth (0xb0)[0m
[0;32mI (4288) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (4298) wifi:state: assoc -> run (0x10)[0m
[0;32mI (4308) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (4348) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (4348) wifi:security: WPA2-PSK, phy: bgn, rssi: -74[0m
[0;32mI (4358) wifi:pm start, type: 1[0m

[0;32mI (4358) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (4378) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (4418) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (4418) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (8088) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (8088) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (8088) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (8098) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (8098) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (8418) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (8418) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (8418) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (8418) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (8428) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (8428) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (8438) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (8448) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (8458) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (8458) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (8458) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (8468) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (8468) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (8478) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (8478) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (8488) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (8488) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (8498) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (8498) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (8508) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (8508) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (8518) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (8828) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (8828) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (8828) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (8838) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (8838) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (8848) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (8848) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (8858) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (8868) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (8868) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (8878) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (8878) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (8888) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (8888) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (8898) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (8898) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (8908) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (8908) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (8918) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (8918) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (8928) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (8938) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (8938) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (8948) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (8948) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (8958) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (8988) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9750 0x400897c1:0x3ffb9770 0x4008a64a:0x3ffb9790 0x4008b98b:0x3ffb9810 0x4008a754:0x3ffb9830 0x4008a706:0x00000008 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (858) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -73[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (888) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (1018) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (1018) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (3068) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3068) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3068) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3078) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3078) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3488) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3488) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3498) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3508) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3508) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3518) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3528) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3528) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3528) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3538) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3538) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3548) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3548) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3568) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3578) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3578) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3788) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3788) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3788) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3798) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3798) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3808) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3808) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3818) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3828) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3828) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3838) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3838) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3848) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3848) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3858) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3858) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3868) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3868) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3878) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3878) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3888) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3898) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3898) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3908) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 4017 (-0xfffff04f)[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2315 in_left: 4022, nb_want: 5137[0m

[0;32mI (3948) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 1115 (-0xfffffba5)[0m

[0;32mI (3958) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3988) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9ee0 0x400897c1:0x3ffb9f00 0x4008a64a:0x3ffb9f20 0x4008b98b:0x3ffb9fa0 0x4008a754:0x3ffb9fc0 0x4008a706:0x3ffba2e0 0x00060e1d:0x00000020 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) phy_init: Saving new calibration data due to checksum failure or outdated calibration data, mode(0)[0m
[0;32mI (778) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (778) wifi:enable tsf[0m
[0;32mI (778) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (788) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (798) wifi:state: init -> auth (0xb0)[0m
[0;32mI (798) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (808) wifi:state: assoc -> run (0x10)[0m
[0;32mI (828) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (1758) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (1758) wifi:security: WPA2-PSK, phy: bgn, rssi: -75[0m
[0;32mI (1768) wifi:pm start, type: 1[0m

[0;32mI (1768) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (1788) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (1788) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (2288) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (6178) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (6178) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (6178) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (6188) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (6188) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (6408) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (6408) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (6408) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (6408) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (6418) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (6418) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (6428) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (6428) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (6438) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (6438) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (6448) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (6448) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (6458) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (6458) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (6468) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (6478) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (6478) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (6478) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (6488) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (6498) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (6498) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (6508) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (6628) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (6628) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (6638) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (6638) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (6638) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (6648) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (6648) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (6658) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (6668) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (6668) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (6678) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (6678) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (6688) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (6688) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (6698) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (6708) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (6708) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (6708) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (6718) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (6718) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (6728) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (6738) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (6738) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (6748) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (6748) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (6758) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (6798) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9950 0x400897c1:0x3ffb9970 0x4008a64a:0x3ffb9990 0x4008b98b:0x3ffb9a10 0x4008a754:0x3ffb9a30 0x4008a706:0x00000000 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -75[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (998) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (998) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (3038) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3038) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3038) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3048) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3048) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3268) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3268) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3278) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3278) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3278) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3288) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3308) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3308) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3318) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3328) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3338) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3338) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3338) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3348) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3358) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3358) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3648) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3658) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9720 0x400897c1:0x3ffb9740 0x4008a64a:0x3ffb9760 0x4008b98b:0x3ffb97e0 0x4008a754:0x3ffb9800 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (778) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (838) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -73[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (888) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (888) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (4568) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (4568) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (4568) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (4578) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (4578) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (4798) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (4798) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4798) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4798) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (4808) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4808) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4818) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (4818) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (4838) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (4838) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (4838) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (4838) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (4848) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (4858) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4858) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (4868) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (4868) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (4878) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (4878) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (4888) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4888) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4898) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5198) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5198) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5198) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5208) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5208) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5218) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5218) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5228) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5228) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5238) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5248) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5248) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5258) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5258) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5268) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5268) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5278) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5278) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5288) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5288) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5298) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5298) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5318) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5318) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5358) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9720 0x400897c1:0x3ffb9740 0x4008a64a:0x3ffb9760 0x4008b98b:0x3ffb97e0 0x4008a754:0x3ffb9800 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (898) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (898) wifi:security: WPA2-PSK, phy: bgn, rssi: -75[0m
[0;32mI (898) wifi:pm start, type: 1[0m

[0;32mI (898) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (918) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (918) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1418) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (4928) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (4928) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (4928) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (4938) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (4938) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (5328) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5338) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5338) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (5338) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5348) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5348) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (5358) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (5368) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (5368) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (5378) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (5378) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (5378) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (5388) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5388) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (5398) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (5408) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (5408) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (5418) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (5418) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5428) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5428) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5628) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5638) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5718) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9980 0x400897c1:0x3ffb99a0 0x4008a64a:0x3ffb99c0 0x4008b98b:0x3ffb9a40 0x4008a754:0x3ffb9a60 0x4008a706:0x3ffb9a80 0x4012c090:0x3ffb9d14 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (788) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (858) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -73[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (948) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (958) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1378) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (5038) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (5038) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (5038) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (5048) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (5048) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (5268) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (5268) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5268) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5268) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (5278) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5278) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5288) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (5288) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (5308) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (5318) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5328) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (5338) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (5338) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (5348) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (5348) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (5358) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5358) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5368) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5628) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5638) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5718) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 4017 (-0xfffff04f)[0m

[0;32mI (5748) mbedtls: ssl_msg.c:2315 in_left: 4022, nb_want: 5137[0m

[0;32mI (5748) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 1115 (-0xfffffba5)[0m

[0;32mI (5758) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5788) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9e30 0x400897c1:0x3ffb9e50 0x4008a64a:0x3ffb9e70 0x4008b98b:0x3ffb9ef0 0x4008a754:0x3ffb9f10 0x4008a706:0x3f40db58 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (858) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -73[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (888) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (938) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (938) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (4518) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (4518) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (4518) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (4528) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (4528) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (4748) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (4748) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4748) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4748) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (4758) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4758) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4758) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (4768) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (4778) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (4778) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (4788) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (4788) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (4798) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (4798) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4808) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (4818) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (4818) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (4818) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (4828) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (4838) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4838) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4838) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5178) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5178) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5188) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5188) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5188) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5198) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5198) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5208) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5218) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5218) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5228) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5228) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5238) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5238) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5248) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5258) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5258) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5258) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5268) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5268) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5278) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5288) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5288) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5298) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5298) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5308) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5348) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb99a0 0x400897c1:0x3ffb99c0 0x4008a64a:0x3ffb99e0 0x4008b98b:0x3ffb9a60 0x4008a754:0x3ffb9a80 0x4008a706:0x3ffb9aa0 0x4008a265:0x3ffb9d3c |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (798) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (828) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (868) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (868) wifi:security: WPA2-PSK, phy: bgn, rssi: -77[0m
[0;32mI (868) wifi:pm start, type: 1[0m

[0;32mI (868) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (888) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (908) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3018) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3018) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3018) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3028) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3028) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3248) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3248) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3248) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3258) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3258) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3268) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3268) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3278) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3288) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3288) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3298) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3298) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3308) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3308) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3318) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3328) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3328) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3338) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3338) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3348) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3348) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3598) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3628) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3658) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3668) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3668) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9a70 0x400897c1:0x3ffb9a90 0x4008a64a:0x3ffb9ab0 0x4008b98b:0x3ffb9b30 0x4008a754:0x3ffb9b50 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (472) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (858) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (858) wifi:state: init -> auth (0xb0)[0m
[0;32mI (868) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (878) wifi:state: assoc -> run (0x10)[0m
[0;32mI (898) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (928) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (928) wifi:security: WPA2-PSK, phy: bgn, rssi: -79[0m
[0;32mI (938) wifi:pm start, type: 1[0m

[0;32mI (938) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (958) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (958) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1458) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (5158) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (5158) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (5158) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (5168) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (5168) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (5598) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5598) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5598) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5608) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5618) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (5618) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (5628) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (5628) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (5638) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (5638) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (5648) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (5648) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5658) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (5668) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (5678) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (5678) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (5688) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5688) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5698) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5868) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5868) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5868) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5878) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5878) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (5888) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (5888) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (5898) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5898) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (5908) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (5908) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (5918) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (5918) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (5928) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (5938) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (5938) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (5948) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5948) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (5958) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (5958) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (5968) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (5968) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (5978) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (5988) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (5988) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (5988) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (6028) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9720 0x400897c1:0x3ffb9740 0x4008a64a:0x3ffb9760 0x4008b98b:0x3ffb97e0 0x4008a754:0x3ffb9800 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (768) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (868) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (868) wifi:security: WPA2-PSK, phy: bgn, rssi: -76[0m
[0;32mI (868) wifi:pm start, type: 1[0m

[0;32mI (868) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (928) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (928) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (938) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (948) wifi:<ba-del>idx:1, tid:0[0m
[0;32mI (958) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:1, winSize:64[0m
[0;32mI (3168) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3168) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3168) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3178) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3178) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3408) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3408) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3408) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3408) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3418) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3428) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3428) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3438) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3448) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3448) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3448) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3458) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3458) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3468) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3468) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3478) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3478) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3488) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3498) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3498) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3508) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3508) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3678) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3688) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3698) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3708) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3718) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3718) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3728) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3728) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3738) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3748) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3748) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3758) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3758) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3768) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3768) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3778) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3788) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3788) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3798) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3798) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3808) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3848) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9720 0x400897c1:0x3ffb9740 0x4008a64a:0x3ffb9760 0x4008b98b:0x3ffb97e0 0x4008a754:0x3ffb9800 0x4008a706:0xa5a5a5a5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
I (502) efuse_init: Chip rev:         v3.1
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (788) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (848) wifi:security: WPA2-PSK, phy: bgn, rssi: -72[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (928) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (928) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (2968) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (2968) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (2968) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (2978) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (2978) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3418) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3418) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3418) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3418) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3428) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3428) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3438) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3448) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3458) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3458) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3458) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3468) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3468) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3478) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3478) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3488) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3498) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3498) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3508) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3508) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3518) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3738) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3748) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3748) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3758) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (3758) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (3768) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3778) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (3778) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (3788) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (3788) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3798) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3798) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (3808) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (3808) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3818) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3818) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3828) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3828) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3838) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3848) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3848) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (3858) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (3858) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (3868) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3908) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9e30 0x400897c1:0x3ffb9e50 0x4008a64a:0x3ffb9e70 0x4008b98b:0x3ffb9ef0 0x4008a754:0x3ffb9f10 0x4008a706:0x3f40db58 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (758) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (868) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (868) wifi:state: init -> auth (0xb0)[0m
[0;32mI (878) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (878) wifi:state: assoc -> run (0x10)[0m
[0;32mI (898) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (938) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (938) wifi:security: WPA2-PSK, phy: bgn, rssi: -77[0m
[0;32mI (948) wifi:pm start, type: 1[0m

[0;32mI (948) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (968) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (968) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (998) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (3208) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (3208) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (3208) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (3218) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (3218) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (3548) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (3548) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3548) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3548) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3558) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (3568) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (3578) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (3588) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (3588) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (3598) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (3608) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (3618) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (3628) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (3628) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (3638) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (3638) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3648) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (3978) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (3988) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (3998) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (4008) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4018) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (4018) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (4028) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (4038) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (4038) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (4038) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (4048) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (4058) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (4058) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4068) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (4068) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (4078) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (4078) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4088) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (4088) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (4098) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (4098) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (4108) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (4148) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb99a0 0x400897c1:0x3ffb99c0 0x4008a64a:0x3ffb99e0 0x4008b98b:0x3ffb9a60 0x4008a754:0x3ffb9a80 0x4008a706:0x400014d5 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc071c, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (768) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (878) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (878) wifi:state: init -> auth (0xb0)[0m
[0;32mI (1878) wifi:state: auth -> init (0x200)[0m
[0;32mI (1918) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (4338) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (4348) wifi:state: init -> auth (0xb0)[0m
[0;32mI (4358) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (4368) wifi:state: assoc -> run (0x10)[0m
[0;32mI (4388) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (4418) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (4428) wifi:security: WPA2-PSK, phy: bgn, rssi: -80[0m
[0;32mI (4428) wifi:pm start, type: 1[0m

[0;32mI (4428) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (4488) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
[0;32mI (4558) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (4558) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (8138) esp_netif_handlers: sta ip: 192.168.0.39, mask: 255.255.255.0, gw: 192.168.0.1[0m
[0;32mI (8138) DOOR_MONITOR: âœ… Wi-Fi connected![0m
[0;32mI (8138) gpio: GPIO[4]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (8148) DOOR_MONITOR: GPIO 4 configured for sensor[0m
[0;33mW (8148) DOOR_MONITOR: Door/Window is OPEN![0m
[0;32mI (8358) mbedtls: ssl_tls.c:4606 => handshake[0m

[0;32mI (8358) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (8358) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (8368) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST[0m

[0;32mI (8368) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (8378) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (8378) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO[0m

[0;32mI (8388) mbedtls: ssl_client.c:919 => write client hello[0m

[0;32mI (8398) mbedtls: ssl_msg.c:2783 => write handshake message[0m

[0;32mI (8398) mbedtls: ssl_msg.c:2943 => write record[0m

[0;32mI (8408) mbedtls: ssl_msg.c:3080 <= write record[0m

[0;32mI (8408) mbedtls: ssl_msg.c:2904 <= write handshake message[0m

[0;32mI (8408) mbedtls: ssl_client.c:1012 <= write client hello[0m

[0;32mI (8418) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (8418) mbedtls: ssl_msg.c:2367 message length: 249, out_left: 249[0m

[0;32mI (8428) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 249 (-0xffffff07)[0m

[0;32mI (8438) mbedtls: ssl_msg.c:2401 <= flush output[0m

[0;32mI (8438) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO[0m

[0;32mI (8448) mbedtls: ssl_tls12_client.c:1195 => parse server hello[0m

[0;32mI (8448) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (8458) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (8458) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (8588) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (8588) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (8588) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (8598) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (8598) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 74[0m

[0;32mI (8608) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 74[0m

[0;32mI (8608) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 69 (-0xffffffbb)[0m

[0;32mI (8618) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (8628) mbedtls: ssl_msg.c:4261 <= read record[0m

[0;32mI (8628) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 25[0m

[0;32mI (8638) mbedtls: ssl_tls12_client.c:1661 <= parse server hello[0m

[0;32mI (8638) mbedtls: ssl_msg.c:2353 => flush output[0m

[0;32mI (8648) mbedtls: ssl_msg.c:2362 <= flush output[0m

[0;32mI (8648) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE[0m

[0;32mI (8658) mbedtls: ssl_tls.c:7962 => parse certificate[0m

[0;32mI (8658) mbedtls: ssl_msg.c:4189 => read record[0m

[0;32mI (8668) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (8668) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5[0m

[0;32mI (8678) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5[0m

[0;32mI (8678) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)[0m

[0;32mI (8688) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (8698) mbedtls: ssl_msg.c:2155 => fetch input[0m

[0;32mI (8698) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 5137[0m

[0;32mI (8708) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 5137[0m

[0;32mI (8708) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5132 (-0xffffebf4)[0m

[0;32mI (8718) mbedtls: ssl_msg.c:2340 <= fetch input[0m

[0;32mI (8758) mbedtls: ssl_msg.c:4261 <= read record[0m


***ERROR*** A stack overflow in task main has been detected.


Backtrace: 0x40081b3d:0x3ffb9c10 0x400897c1:0x3ffb9c30 0x4008a64a:0x3ffb9c50 0x4008b98b:0x3ffb9cd0 0x4008a754:0x3ffb9cf0 0x4008a706:0x31282027 |<-CORRUPTED




ELF file SHA256: b873c7e05

Rebooting...
ets Jul 29 2019 12:21:46

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:6276
load:0x40078000,len:15748
load:0x40080400,len:4
ho 8 tail 4 room 4
load:0x40080404,len:3860
entry 0x4008063c
[0;32mI (31) boot: ESP-IDF v5.4.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul 20 2025 22:29:19[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (33) boot: chip revision: v3.1[0m
[0;32mI (36) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (39) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (43) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (47) boot: Enabling RNG early entropy source...[0m
[0;32mI (51) boot: Partition Table:[0m
[0;32mI (54) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (60) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (67) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (73) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (80) boot: End of partition table[0m
[0;32mI (83) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=33c30h (212016) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00043c58 vaddr=3ff80000 size=0001ch (    28) load[0m
[0;32mI (163) esp_image: segment 2: paddr=00043c7c vaddr=3ffb0000 size=03f10h ( 16144) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00047b94 vaddr=40080000 size=08484h ( 33924) load[0m
[0;32mI (187) esp_image: segment 4: paddr=00050020 vaddr=400d0020 size=a3e40h (671296) map[0m
[0;32mI (417) esp_image: segment 5: paddr=000f3e68 vaddr=40088484 size=0f314h ( 62228) load[0m
[0;32mI (453) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (453) boot: Disabling RNG early entropy source...[0m
[0;32mI (463) cpu_start: Multicore app[0m
[0;32mI (471) cpu_start: Pro cpu start user code[0m
[0;32mI (472) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (472) app_init: Application information:[0m
[0;32mI (472) app_init: Project name:     door_monitor[0m
[0;32mI (476) app_init: App version:      v5.4.1-dirty[0m
[0;32mI (480) app_init: Compile time:     Jul 20 2025 23:06:41[0m
[0;32mI (485) app_init: ELF file SHA256:  b873c7e05...[0m
[0;32mI (490) app_init: ESP-IDF:          v5.4.1-dirty[0m
[0;32mI (494) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (498) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (502) efuse_init: Chip rev:         v3.1[0m
[0;32mI (506) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (512) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (517) heap_init: At 3FFB87A0 len 00027860 (158 KiB): DRAM[0m
[0;32mI (522) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (528) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (533) heap_init: At 40097798 len 00008868 (34 KiB): IRAM[0m
[0;32mI (540) spi_flash: detected chip: generic[0m
[0;32mI (542) spi_flash: flash io: dio[0m
[0;33mW (545) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (558) main_task: Started on CPU0[0m
[0;32mI (568) main_task: Calling app_main()[0m
[0;32mI (598) wifi:wifi driver task: 3ffc07a0, prio:23, stack:6656, core=0[0m
[0;32mI (608) wifi:wifi firmware version: 79fa3f41ba[0m
[0;32mI (608) wifi:wifi certification version: v7.0[0m
[0;32mI (608) wifi:config NVS flash: enabled[0m
[0;32mI (608) wifi:config nano formatting: disabled[0m
[0;32mI (618) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (618) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (618) wifi:Init management short buffer num: 32[0m
[0;32mI (628) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (628) wifi:Init static rx buffer size: 1600[0m
[0;32mI (638) wifi:Init static rx buffer num: 10[0m
[0;32mI (638) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (648) wifi_init: rx ba win: 6[0m
[0;32mI (648) wifi_init: accept mbox: 6[0m
[0;32mI (648) wifi_init: tcpip mbox: 32[0m
[0;32mI (648) wifi_init: udp mbox: 6[0m
[0;32mI (658) wifi_init: tcp mbox: 6[0m
[0;32mI (658) wifi_init: tcp tx win: 5760[0m
[0;32mI (658) wifi_init: tcp rx win: 5760[0m
[0;32mI (658) wifi_init: tcp mss: 1440[0m
[0;32mI (668) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (668) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (678) phy_init: phy_version 4860,6b7a6e5,Feb  6 2025,14:47:07[0m
[0;32mI (758) wifi:mode : sta (f4:65:0b:46:b0:cc)[0m
[0;32mI (768) wifi:enable tsf[0m
[0;32mI (768) DOOR_MONITOR: ðŸ“¡ Connecting to Wi-Fi...[0m
[0;32mI (778) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (778) wifi:state: init -> auth (0xb0)[0m
[0;32mI (798) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (798) wifi:state: assoc -> run (0x10)[0m
[0;32mI (818) wifi:<ba-add>idx:0 (ifx:0, 6c:cd:d6:77:6c:77), tid:5, ssn:0, winSize:64[0m
[0;32mI (848) wifi:connected with Ace & King of Hearts, aid = 4, channel 1, BW20, bssid = 6c:cd:d6:77:6c:77[0m
[0;32mI (858) wifi:security: WPA2-PSK, phy: bgn, rssi: -77[0m
[0;32mI (858) wifi:pm start, type: 1[0m

[0;32mI (858) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (878) wifi:dp: 2, bi: 102400, li: 4, scale listen interval from 307200 us to 409600 us[0m
[0;32mI (878) wifi:AP's beacon interval = 102400 us, DTIM period = 2[0m
[0;32mI (1378) wifi:<ba-add>idx:1 (ifx:0, 6c:cd:d6:77:6c:77), tid:0, ssn:0, winSize:64[0m
